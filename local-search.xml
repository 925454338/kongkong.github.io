<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>linux 服务器配置 clash 使用 vpn 网络</title>
    <link href="/2024/06/13/linux-clash-vpn/"/>
    <url>/2024/06/13/linux-clash-vpn/</url>
    
    <content type="html"><![CDATA[<p>背景：国内的docker镜像源出现不能访问的情况。考虑到之后可能会出现的信创相关改造，会使查找资源变得更加困难，所以查询资料，整理了这份文档。</p><p>选择使用的<code>vpn</code>工具是<code>Clash</code>。</p><h6 id="1-下载"><a href="#1-下载" class="headerlink" title="1. 下载"></a>1. 下载</h6><p>因为clash因为某些原因，<code>github</code>上的仓库已经被删除。经过一番查找，<a href="https://github.com/Loyalsoldier/clash-rules/tree/hidden">clash-rules</a> 这个项目里收藏有相关的安装包。</p><p>安装包地址：<code>https://github.com/Loyalsoldier/clash-rules/blob/hidden/software/clash-premium/clash-linux-amd64-v3-2023.08.17.gz</code></p><p>下载好安装包后，将安装包上传到服务器，可以暂时先放在home目录下。也可以直接使用wget命令下载。</p><p><code>wget https://raw.githubusercontent.com/Loyalsoldier/clash-rules/hidden/software/clash-premium/clash-linux-amd64-v3-2023.08.17.gz</code></p><p>我下载的是2023.08.17版本。</p><p>解压文件：</p><p><code>gunzip clash-linux-amd64-v3-2023.08.17.gz</code></p><p>给文件添加可执行权限：</p><p><code>chmod clash-linux-amd64-v3-2023.08.17</code></p><p>移动文件到<code>/usr/local/bin/clash</code>目录：</p><p><code>sudo mv clash-linux-amd64-v3-2023.08.17 /usr/local/bin/clash</code></p><h6 id="2-配置Clash"><a href="#2-配置Clash" class="headerlink" title="2. 配置Clash"></a>2. 配置Clash</h6><p>Clash 的配置文件通常是 <code>config.yaml</code>。创建一个配置文件目录并下载或编写配置文件：</p><p><code>mkdir -p ~/.config/clash</code></p><p><code>nano ~/.config/clash/config.yaml</code></p><p><code>config.yaml</code>这个文件的内容可以直接复制windows系统的<code>Clash</code>配置的内容，不是必须非得执行上面的<code>nano</code>命令。</p><h6 id="3-运行Clash"><a href="#3-运行Clash" class="headerlink" title="3.运行Clash"></a>3.运行Clash</h6><p>Clash的启动命令是：<code>clash -d ~/.config/clash</code></p><p>启动后，需要设置系统代理，使系统流量通过<code>Clash</code>。设置系统代理可以使用环境变量或配置网络管理器。</p><p>使用环境变量需要执行命令：</p><p><code>export http_proxy=http://127.0.0.1:7890</code></p><p><code>export https_proxy=http://127.0.0.1:7890</code></p><p>配置系统的<code>http</code>代理和<code>https</code>代理。</p><p>要使<code>Clash</code>启动后在后台运行，可以使用<code>nohup</code>命令：</p><p><code>nohup clash -d ~/.config/clash &gt; clash.log 2&gt;&amp;1 &amp;</code></p><p>这个命令会将<code>Clash </code>的输出重定向到 <code>clash.log</code> 文件中，并在后台运行。</p><p>也可以使用 <code>systemd</code> 服务文件可以让 Clash 在系统启动时自动启动，并在后台运行。因为觉得没这个必要，所以没有去实践，只在这里稍微记录一下。</p><h6 id="4-停止Clash"><a href="#4-停止Clash" class="headerlink" title="4.停止Clash"></a>4.停止Clash</h6><p><code>nohup</code>命令启动的程序，可以使用命令：</p><p><code>ps aux | grep clash</code> 找到 Clash 的进程 ID (PID)</p><p>然后使用：</p><p><code>kill</code> <PID>  结束<code>Clash</code>的进程。</p><p>结束进程后，需要将之前设置的环境变量恢复。使用 <code>unset</code> 命令可以清除代理环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">unset</span> http_proxy<br><span class="hljs-built_in">unset</span> https_proxy<br><span class="hljs-built_in">unset</span> all_proxy<br><span class="hljs-built_in">unset</span> HTTP_PROXY<br><span class="hljs-built_in">unset</span> HTTPS_PROXY<br><span class="hljs-built_in">unset</span> ALL_PROXY<br></code></pre></td></tr></table></figure><p>也可以在 <code>~/.bashrc</code> 或 <code>~/.profile</code> 中移除这些环境变量设置，然后重新加载文件或重新启动终端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 编辑 .bashrc 或 .profile 文件</span><br>nano ~/.bashrc<br><span class="hljs-comment"># 删除或注释掉代理设置行，例如：</span><br><span class="hljs-comment"># export http_proxy=http://127.0.0.1:7890</span><br><span class="hljs-comment"># export https_proxy=http://127.0.0.1:7890</span><br><span class="hljs-comment"># 保存文件后重新加载 .bashrc</span><br><span class="hljs-built_in">source</span> ~/.bashrc<br><br></code></pre></td></tr></table></figure><h6 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h6><p>在第一次运行<code>Clash</code>时，提示没有找到<code>Country.mmdb</code>，且自动下载失败，根据提示的内容，在有外网环境的电脑上手动下载。下载地址：</p><p><code>https://cdn.jsdelivr.net/gh/Dreamacro/maxmind-geoip@release/Country.mmdb</code></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/06/10/hello-world/"/>
    <url>/2024/06/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
